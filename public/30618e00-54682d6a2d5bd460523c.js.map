{"version":3,"sources":["webpack:///./src/components/nav.js"],"names":["navLink","css","textDecoration","color","padding","rhythm","background","border","cursor","sectionLink","NavLink","handleClick","props","onButtonClick","sectionRef","render","onClick","this","className","highlightIndex","index","section","sectionClass","backgroundColor","transition","sectionTitle","React","Component","SectionLink","children","Nav","state","showSpeech","speechBubbleIndex","speechRef","createRef","sectionRefs","showSpeechBubble","setState","hideSpeechBubble","setSpeechBubbleIndex","setHighlightIndex","scrollToTop","window","scrollTo","top","scrollToSection","current","scrollIntoView","textAlign","fontSize","transform","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ref","key","width","height","viewBox","version","xmlns","xmlnsXlink","xmlSpace","xmlnsserif","style","fillRule","clipRule","strokeLinecap","strokeLinejoin","strokeMiterlimit","d","sections","speechSVGPath","fill","stroke","strokeWidth","sectionIntro","map"],"mappings":"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","file":"30618e00-54682d6a2d5bd460523c.js","sourcesContent":["import React from 'react'\nimport { css } from '@emotion/react'\nimport { Link } from 'gatsby'\nimport { rhythm } from '../utils/typography'\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\n\n// data\nimport { sections } from '../data/sections'\n\n// styles\nconst navLink = css({\n  textDecoration: 'none',\n  color: 'black',\n  padding: rhythm(.25),\n  background: 'none',\n  border: 'none',\n  cursor: 'pointer'\n})\n\nconst sectionLink = css({\n  color: 'black',\n  background: 'none',\n  border: 'none',\n  cursor: 'pointer',\n  textDecoration: 'underline'\n})\n\nclass NavLink extends React.Component {\n  handleClick = () => {\n    this.props.onButtonClick(this.props.sectionRef);\n  }\n\n  render() {\n    return (\n      <button\n        onClick={this.handleClick}\n        className=\"nav-link\"\n        css={[\n          navLink,\n          this.props.highlightIndex === this.props.index ?\n            this.props.section.sectionClass\n          :\n            {\n              backgroundColor: 'transparent',\n              transition: 'background-color 0.1s'\n            }\n        ]}\n      >\n        <h3>\n          {this.props.section.sectionTitle}\n        </h3>\n      </button>\n    )\n  }\n}\n\nclass SectionLink extends React.Component {\n  handleClick = () => {\n    this.props.onButtonClick(this.props.sectionRef);\n  }\n\n  render() {\n    return (\n      <a\n        onClick={this.handleClick}\n        className=\"speech-link\"\n        css={[\n          sectionLink,\n          this.props.section.sectionClass\n        ]}\n      >\n        {this.props.children}\n      </a>\n    )\n  }\n}\n\nclass Nav extends React.Component{\n\n  constructor (props) {\n    super(props)\n    this.state =\n      {\n        showSpeech: false,\n        highlightIndex: -1,\n        speechBubbleIndex: -1,\n      }\n    this.speechRef = React.createRef()\n    this.sectionRefs = props.sectionRefs\n  }\n\n  showSpeechBubble (props) {\n    this.setState({ showSpeech: true })\n  }\n\n  hideSpeechBubble (props) {\n    this.setState({ showSpeech: false })\n  }\n\n  setSpeechBubbleIndex (index) {\n    this.setState({ speechBubbleIndex: index })\n  }\n\n  setHighlightIndex (index) {\n    this.setState({ highlightIndex: index })\n  }\n\n  scrollToTop () {\n    window.scrollTo({top: 0});\n  }\n\n  scrollToSection (sectionRef) {\n    sectionRef.current.scrollIntoView()\n  }\n\n  render () {\n    return (\n        <div\n          css={css`\n            display: inline-block;\n            float: right;\n            margin-top: 25vh;\n            padding: ${rhythm(2)};\n            text-align: right;\n          `}\n        >\n          <div>\n            <button\n              onClick={this.scrollToTop}\n              css={[\n                {\n                  textDecoration: 'none',\n                  color: 'black',\n                  background: 'none',\n                  border: 'none',\n                  cursor: 'pointer'\n                }\n              ]}\n            >\n              <h1\n                css={[\n                  {\n                    textAlign: 'center',\n                    fontSize: rhythm(3),\n                    transform: 'scale(-1, 1)'\n                  }\n                ]}\n              >\n                üê∫\n              </h1>\n            </button>\n            <div\n              css={css`\n                position: relative;\n                display: inline-block;\n              `}\n            >\n              <CSSTransitionGroup\n                transitionName=\"speech\"\n                transitionEnterTimeout={300}\n                transitionLeaveTimeout={300}\n              >\n                { this.state.showSpeech ?\n                  <div\n                    ref={this.speechRef}\n                    key={this.state.speechBubbleIndex}\n                    css={css`\n                      position: absolute;\n                      z-index: 1;\n                      top: -8em;\n                      width: 650px;\n                      height: {this.state.speechBubbleIndex >= 0 ?\n                                \"200px\"\n                              :\n                                \"300px\"\n                              };\n                      display: flex;\n                      text-align: left;\n                      transition-timing-function: ease;\n                    `}\n                  >\n                    <div\n                      css={[\n                        {\n                          position: \"absolute\",\n                          width: \"100%\",\n                          zIndex: \"-1\"\n                        }\n                      ]}\n                    >\n                      <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 650 300\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" xmlSpace=\"preserve\" xmlnsserif=\"http://www.serif.com/\" style={{fillRule:'evenodd',clipRule:'evenodd',strokeLinecap:'round',strokeLinejoin:'round',strokeMiterlimit:1.5}}>\n                        <g transform=\"matrix(1.03425,0,0,0.804283,-113.606,-63.4149)\">\n                          <path\n                            d={this.state.speechBubbleIndex >= 0 ?\n                                sections[this.state.speechBubbleIndex].speechSVGPath\n                              :\n                                \"M119.921,220.673C119.921,220.673 141.464,206.977 142.446,205.995C145.398,203.044 149.953,199.806 152.948,197.202C164.651,187.026 164.492,180.18 167.386,165.707C171.695,144.165 166.302,121.378 210.254,103.11C240.669,90.468 289.483,91.821 338.447,91.29C384.31,90.792 430.296,88.025 461.67,88.172C471.68,88.219 486.225,88.385 503.083,88.664C565.992,89.705 661.131,92.308 673.214,96.063C674.99,96.615 711.666,101.068 723.248,123.374C735.707,147.368 734.029,174.485 734.608,191.911C735.566,220.747 737.652,341.558 729.89,373.643C725.644,391.192 715.758,409.539 702.028,425.144C685.301,444.156 647.114,444.605 618.381,444.577C588.143,444.547 532.349,442.217 498.553,442.89C484.037,443.179 360.939,444.854 337.926,443.902C318.074,443.081 245.367,451.896 216.2,439.125C188.801,427.128 184.018,399.811 177.494,371.626C169.289,336.172 169.604,217.331 167.672,214.089C162.829,205.963 157.734,209.976 153.643,211.533C146.719,214.168 123.333,220.673 119.921,220.673Z\"\n                            }\n                            style={{fill:'white',stroke:'black',strokeWidth:'2px'}}\n                          />\n                        </g>\n                      </svg>\n                    </div>\n                    <div\n                      css={[\n                        {\n                          padding: \"40px 40px 0 100px\"\n                        }\n                      ]}\n                    >\n                      {this.state.speechBubbleIndex >= 0 ?\n                        sections[this.state.speechBubbleIndex].sectionIntro\n                      :\n                        <p>\n                          Hi! üëã\n                          <br/>\n                          <br/>\n                          My name is Jacob Wolf.\n                          <br/>\n                          I‚Äôm a {' '}\n                          <SectionLink \n                            sectionRef={this.sectionRefs[0]}\n                            onButtonClick={this.scrollToSection}\n                            section={sections[0]}\n                          >\n                            teacher\n                          </SectionLink>,{' '}\n                          <SectionLink \n                            sectionRef={this.sectionRefs[1]}\n                            onButtonClick={this.scrollToSection}\n                            section={sections[1]}\n                          >\n                            programmer\n                          </SectionLink>, and{' '}\n                          <SectionLink \n                            sectionRef={this.sectionRefs[2]}\n                            onButtonClick={this.scrollToSection}\n                            section={sections[2]}\n                          >\n                            researcher\n                          </SectionLink>{' '}\n                          trying to improve the ways we teach people about technology.\n                          <br/>\n                          <br/>\n                          Scroll down to learn more about some of the \n                          things I‚Äôm working on or contact me any of the ways below.\n                        </p>\n                      }\n                    </div>\n                  </div>\n                : \n                  <div key={-2}></div>\n                }\n              </CSSTransitionGroup>\n            </div>\n          </div>\n          <ul\n            css={css`\n              list-style-type:none;\n              margin-left:0;\n            `}\n          >\n            {sections.map((section, index) =>\n              <li\n                key={index}\n              >\n                <NavLink \n                  section={section}\n                  sectionRef={this.sectionRefs[index]}\n                  index={index}\n                  highlightIndex={this.state.highlightIndex}\n                  onButtonClick={this.scrollToSection}\n                />\n              </li>\n            )}\n          </ul>\n        </div>\n    )\n  }\n}\n\nexport default Nav\n"],"sourceRoot":""}